apply plugin: 'java'
apply plugin: 'kotlin'
apply plugin: 'idea'
apply plugin: 'spring-boot'

sourceCompatibility = 1.8
targetCompatibility = 1.8

version = '1.0'

ext.springVersion = '4.1.1.RELEASE'
ext.aspectjVersion = '1.7.4'
ext.jacksonVersion = '2.2.3'

repositories {
    mavenLocal()
    mavenCentral()
}

dependencies {
    compile fileTree(dir: 'lib', include: '*.jar')
    compile("org.springframework.boot:spring-boot-starter:${springBootVersion}")
    compile 'commons-io:commons-io:2.1'
    compile 'redis.clients:jedis:2.8.0'
    compile 'org.apache.xmlbeans:xmlbeans:2.6.0'
    compile 'commons-codec:commons-codec:1.10'
    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlinVersion"
    compile 'org.eclipse.collections:eclipse-collections-api:7.0.2'
    compile 'org.eclipse.collections:eclipse-collections:7.0.2'

    testCompile 'junit:junit:4.11'
    testCompile 'org.mockito:mockito-all:1.10.19'
}


task wrapper(type: Wrapper) {
    gradleVersion = '2.1'
}

buildscript {
    ext {
        kotlinVersion = '1.0.6'
        springBootVersion = '1.3.2.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:$springBootVersion")
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
    }
}
sourceSets {
    main.java.srcDirs += 'src/main/kotlin'
}

springBoot {
    mainClass = 'ru.umeta.libraryintegration.BootApplication'
}

jar {
    //include contents of output dir
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    manifest {
        attributes 'Manifest-Version': '1.0',
                'Main-Class': 'ru.umeta.libraryintegration.BootApplication'
    }
}
